openapi: 3.1.0
info:
  title: Auth System with RBAC API
  description: API for authentication and role-based access control
  version: 1.0.0
servers:
  - url: https://auth-rbac-api-xxxxxxxx-uc.a.run.app/api
    description: Production server
  - url: http://localhost:8080/api
    description: Local development server
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    User:
      type: object
      properties:
        uid:
          type: string
        email:
          type: string
        displayName:
          type: string
        emailVerified:
          type: boolean
        disabled:
          type: boolean
        metadata:
          type: object
          properties:
            creationTime:
              type: string
            lastSignInTime:
              type: string
    Role:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        permissions:
          type: array
          items:
            type: string
    Permission:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        resource:
          type: string
        action:
          type: string
          enum: [create, read, update, delete, manage]
paths:
  /users:
    post:
      summary: Create a new user
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                password:
                  type: string
                displayName:
                  type: string
                roleIds:
                  type: array
                  items:
                    type: string
      responses:
        "201":
          description: User created successfully
        "400":
          description: Invalid input
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  /users/{id}:
    get:
      summary: Get user details
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User details
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: "#/components/schemas/User"
                  roles:
                    type: array
                    items:
                      type: string
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: User not found
  /users/{id}/roles:
    put:
      summary: Update user roles
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - roleIds
              properties:
                roleIds:
                  type: array
                  items:
                    type: string
      responses:
        "200":
          description: User roles updated successfully
        "400":
          description: Invalid input
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: User not found
  /rbac/roles:
    post:
      summary: Create a new role
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - description
              properties:
                name:
                  type: string
                description:
                  type: string
                permissions:
                  type: array
                  items:
                    type: string
      responses:
        "201":
          description: Role created successfully
        "400":
          description: Invalid input
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    get:
      summary: Get all roles
      security:
        - BearerAuth: []
      responses:
        "200":
          description: List of roles
          content:
            application/json:
              schema:
                type: object
                properties:
                  roles:
                    type: array
                    items:
                      $ref: "#/components/schemas/Role"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  /rbac/permissions:
    post:
      summary: Create a new permission
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - description
                - resource
                - action
              properties:
                name:
                  type: string
                description:
                  type: string
                resource:
                  type: string
                action:
                  type: string
                  enum: [create, read, update, delete, manage]
      responses:
        "201":
          description: Permission created successfully
        "400":
          description: Invalid input
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
